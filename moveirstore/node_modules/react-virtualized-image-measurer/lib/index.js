import _objectWithoutProperties from "babel-runtime/helpers/objectWithoutProperties";
import _defineProperty from "babel-runtime/helpers/defineProperty";
import _extends from "babel-runtime/helpers/extends";
import _Object$getPrototypeOf from "babel-runtime/core-js/object/get-prototype-of";
import _classCallCheck from "babel-runtime/helpers/classCallCheck";
import _createClass from "babel-runtime/helpers/createClass";
import _possibleConstructorReturn from "babel-runtime/helpers/possibleConstructorReturn";
import _inherits from "babel-runtime/helpers/inherits";
var _jsxFileName = "src/index.js";
import React, { PureComponent } from "react";
import PropTypes from "prop-types";

var styles = {
    position: "absolute",
    bottom: "0",
    right: "0",
    width: "1px",
    height: "1px",
    overflow: "hidden",
    opacity: 0
};

var ImageMeasurer = function (_PureComponent) {
    _inherits(ImageMeasurer, _PureComponent);

    function ImageMeasurer() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, ImageMeasurer);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ImageMeasurer.__proto__ || _Object$getPrototypeOf(ImageMeasurer)).call.apply(_ref, [this].concat(args))), _this), _this.makeItemsWithSizes = function (items, sizes) {
            return items.reduce(function (res, item) {

                if (res.stop) return res;

                var src = _this.props.image(item);
                var size = sizes[src];

                // this will stop execution for first non-loaded image
                if (src && !size) {
                    return _extends({}, res, { stop: true });
                }

                res.itemsWithSizes.push({
                    item: item,
                    size: size
                });

                return res;
            }, { itemsWithSizes: [], stop: false }).itemsWithSizes;
        }, _this.timeouts = {}, _this.state = {
            sizes: {}
        }, _this.onLoad = function (src, ref) {

            _this.clearTimeout(src);

            if (_this.state.sizes[src]) return;

            var size = {
                width: ref.offsetWidth,
                height: ref.offsetHeight
            };

            var sizes = _extends({}, _this.state.sizes, _defineProperty({}, src, size));

            _this.setState({ sizes: sizes });
        }, _this.onLoadError = function (event, item, src) {
            _this.onLoad(src, _this.props.onError(event, item, src) || _this.getDefaultSize());
        }, _this.clearTimeout = function (src) {
            var timeout = _this.timeouts[src];
            if (timeout) clearTimeout(timeout);
        }, _this.setTimeout = function (src) {
            _this.clearTimeout(src);
            setTimeout(function () {
                _this.setDefaultSize(src);
            }, _this.props.timeout);
        }, _this.getDefaultSize = function () {
            return {
                width: _this.props.defaultWidth,
                height: _this.props.defaultHeight
            };
        }, _this.setDefaultSize = function (src) {
            _this.onLoad(src, _this.getDefaultSize());
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(ImageMeasurer, [{
        key: "componentDidUpdate",
        value: function componentDidUpdate() {
            var _this2 = this;

            var _props = this.props,
                items = _props.items,
                image = _props.image;


            items.forEach(function (item) {

                var src = image(item);

                if (!!_this2.timeouts[src] || _this2.state.sizes[src]) return;

                if (!src) {
                    _this2.setDefaultSize(src);
                    return;
                }

                _this2.setTimeout(src);
            });
        }
    }, {
        key: "render",
        value: function render() {
            var _this3 = this;

            var _props2 = this.props,
                items = _props2.items,
                image = _props2.image,
                keyMapper = _props2.keyMapper,
                children = _props2.children,
                defaultWidth = _props2.defaultWidth,
                defaultHeight = _props2.defaultHeight,
                onError = _props2.onError,
                timeout = _props2.timeout,
                props = _objectWithoutProperties(_props2, ["items", "image", "keyMapper", "children", "defaultWidth", "defaultHeight", "onError", "timeout"]);

            var sizes = this.state.sizes;


            var itemsWithSizes = this.makeItemsWithSizes(items, sizes);

            return React.createElement(
                "div",
                _extends({}, props, {
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 135
                    }
                }),
                React.createElement(
                    "span",
                    { style: styles, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 137
                        }
                    },
                    items.map(function (item, index) {

                        var src = image(item);

                        if (!src) return null;

                        return React.createElement("img", {
                            key: keyMapper(item, index) || index,
                            src: src,
                            alt: src,
                            onLoad: function onLoad(event) {
                                return _this3.onLoad(src, event.target);
                            },
                            onError: function onError(event) {
                                return _this3.onLoadError(event, item, src);
                            },
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 145
                            }
                        });
                    })
                ),
                children({ itemsWithSizes: itemsWithSizes, sizes: sizes })
            );
        }
    }]);

    return ImageMeasurer;
}(PureComponent);

ImageMeasurer.displayName = "ImageMeasurer";
ImageMeasurer.propTypes = {
    onError: PropTypes.func,
    timeout: PropTypes.number,
    keyMapper: PropTypes.func,
    image: PropTypes.func.isRequired,
    children: PropTypes.func.isRequired,
    defaultWidth: PropTypes.number.isRequired,
    defaultHeight: PropTypes.number.isRequired
};
ImageMeasurer.defaultProps = {
    onError: function onError() {
        return null;
    },
    timeout: 5000,
    keyMapper: function keyMapper() {
        return null;
    }
};
export default ImageMeasurer;
//# sourceMappingURL=index.js.map