{"ast":null,"code":"import _classCallCheck from \"/Users/allar-alexeyalexandrovich/20.12.18/moveirstore/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/allar-alexeyalexandrovich/20.12.18/moveirstore/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/allar-alexeyalexandrovich/20.12.18/moveirstore/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/allar-alexeyalexandrovich/20.12.18/moveirstore/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/allar-alexeyalexandrovich/20.12.18/moveirstore/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/allar-alexeyalexandrovich/20.12.18/moveirstore/src/SearchFlow.js\";\nimport _ from 'lodash';\nimport faker from 'faker';\nimport React, { Component } from 'react';\nimport { Search, Grid, Header, Segment } from 'semantic-ui-react';\nimport { doSearch, clearSearch } from './actions/movies';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nvar source = _.times(5, function () {\n  return {\n    title: faker.company.companyName(),\n    description: faker.company.catchPhrase(),\n    image: faker.internet.avatar(),\n    price: faker.finance.amount(0, 100, 2, '$')\n  };\n});\n\nvar SearchStandard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchStandard, _Component);\n\n  function SearchStandard(props) {\n    var _this;\n\n    _classCallCheck(this, SearchStandard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchStandard).call(this, props));\n\n    _this.resetComponent = function () {\n      return _this.setState({\n        isLoading: false,\n        results: [],\n        value: ''\n      });\n    };\n\n    _this.handleResultSelect = function (e, _ref) {\n      var result = _ref.result;\n      return _this.setState({\n        value: result.title\n      });\n    };\n\n    _this.onInputChange = function (event, _ref2) {\n      var value = _ref2.value;\n      var _this$props = _this.props,\n          doSearch = _this$props.doSearch,\n          clearSearch = _this$props.clearSearch;\n      var query = event.target.value.toLowerCase();\n      console.log('query: ', query);\n\n      _this.setState({\n        searchInput: query\n      }, function () {\n        if (query && query.length > 1) {\n          doSearch(query);\n        } else {\n          clearSearch();\n        }\n      });\n    };\n\n    _this.handleSearchChange = function (e, _ref3) {\n      var value = _ref3.value;\n\n      _this.setState({\n        isLoading: true,\n        value: value\n      });\n\n      setTimeout(function () {\n        if (_this.state.value.length < 1) return _this.resetComponent();\n        var re = new RegExp(_.escapeRegExp(_this.state.value), 'i');\n\n        var isMatch = function isMatch(result) {\n          return re.test(result.title);\n        };\n\n        _this.setState({\n          isLoading: false,\n          results: _.filter(source, isMatch)\n        });\n      }, 300);\n    };\n\n    _this.state = {\n      searchInput: ''\n    };\n    return _this;\n  }\n\n  _createClass(SearchStandard, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.resetComponent();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          searchIsLoading = _this$props2.searchIsLoading,\n          search = _this$props2.search;\n      var _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          value = _this$state.value,\n          results = _this$state.results;\n      return React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Search, Object.assign({\n        loading: isLoading,\n        onResultSelect: this.handleResultSelect,\n        onSearchChange: _.debounce(this.onInputChange, 500, {\n          leading: true\n        }),\n        results: results,\n        value: value\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return SearchStandard;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    search: state.movies.search,\n    searchIsLoading: state.movies.searchIsLoading,\n    pathname: state.router.location.pathname,\n    watchlistMovies: state.movies.watchlistMovies\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    doSearch: doSearch,\n    clearSearch: clearSearch\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchStandard);","map":{"version":3,"sources":["/Users/allar-alexeyalexandrovich/20.12.18/moveirstore/src/SearchFlow.js"],"names":["_","faker","React","Component","Search","Grid","Header","Segment","doSearch","clearSearch","connect","bindActionCreators","source","times","title","company","companyName","description","catchPhrase","image","internet","avatar","price","finance","amount","SearchStandard","props","resetComponent","setState","isLoading","results","value","handleResultSelect","e","result","onInputChange","event","query","target","toLowerCase","console","log","searchInput","length","handleSearchChange","setTimeout","state","re","RegExp","escapeRegExp","isMatch","test","filter","searchIsLoading","search","debounce","leading","mapStateToProps","movies","pathname","router","location","watchlistMovies","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport faker from 'faker'\nimport React, {Component} from 'react'\nimport {Search, Grid, Header, Segment} from 'semantic-ui-react'\nimport {doSearch, clearSearch} from './actions/movies';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nconst source = _.times(5, () => ({\n    title: faker.company.companyName(),\n    description: faker.company.catchPhrase(),\n    image: faker.internet.avatar(),\n    price: faker.finance.amount(0, 100, 2, '$'),\n}))\n\nclass SearchStandard extends Component {\n\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            searchInput: ''\n        }\n    }\n\n    componentWillMount() {\n        this.resetComponent()\n    }\n\n    resetComponent = () => this.setState({isLoading: false, results: [], value: ''})\n\n    handleResultSelect = (e, {result}) => this.setState({value: result.title})\n\n    onInputChange = (event, {value}) => {\n\n        let {doSearch, clearSearch} = this.props;\n        let query = event.target.value.toLowerCase();\n        console.log('query: ', query)\n        this.setState({\n            searchInput: query\n        }, () => {\n            if (query && query.length > 1) {\n\n                doSearch(query);\n            } else {\n\n                clearSearch();\n            }\n        })\n    }\n\n    handleSearchChange = (e, {value}) => {\n        this.setState({isLoading: true, value})\n        setTimeout(() => {\n            if (this.state.value.length < 1) return this.resetComponent()\n\n            const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\n            const isMatch = result => re.test(result.title)\n\n            this.setState({\n                isLoading: false,\n                results: _.filter(source, isMatch),\n            })\n        }, 300)\n    }\n\n    render() {\n        let {searchIsLoading, search} = this.props;\n\n\n        const {isLoading, value, results} = this.state\n\n        return (\n            < Grid>\n                < Grid.Column\n                    width={6}>\n                    < Search\n                        loading={isLoading}\n                        onResultSelect={this.handleResultSelect}\n                        onSearchChange={_.debounce(this.onInputChange, 500, {leading: true})}\n                        results={results}\n                        value={value}\n                        {...\n                            this.props\n                        }\n                    />\n                    <\n                    /Grid.Column>\n\n                    <\n                    /Grid>\n                    )\n                    }\n                    }\n\n                    const mapStateToProps = (state) => {\n                        return {\n                            search:state.movies.search,\n                            searchIsLoading:state.movies.searchIsLoading,\n                            pathname: state.router.location.pathname,\n                            watchlistMovies:state.movies.watchlistMovies\n                        }\n                    }\n\n                    const mapDispatchToProps = dispatch => bindActionCreators({\n                    doSearch,\n                    clearSearch\n                }, dispatch)\n                    export default connect(mapStateToProps, mapDispatchToProps)(SearchStandard);\n"]},"metadata":{},"sourceType":"module"}