{"ast":null,"code":"import * as constants from '../constants';\nimport axios from 'axios';\n\nfunction setPopular(results) {\n  return {\n    type: constants.SET_POPULAR,\n    payload: results\n  };\n}\n\nfunction setLatest(results) {\n  return {\n    type: constants.SET_LATEST,\n    payload: results\n  };\n}\n\nfunction setMovie(results) {\n  return {\n    type: constants.SET_MOVIE,\n    payload: results\n  };\n}\n\nfunction moviesAreLoading() {\n  return {\n    type: constants.MOVIES_ARE_LOADING\n  };\n}\n\nfunction movieIsLoading() {\n  return {\n    type: constants.MOVIE_IS_LOADING\n  };\n}\n\nfunction movieHasError(results) {\n  return {\n    type: constants.MOVIE_HAS_ERROR,\n    payload: results\n  };\n}\n\nfunction setSearchResult(results) {\n  return {\n    type: constants.SET_SEARCH,\n    payload: results\n  };\n}\n\nfunction searchIsLoading() {\n  return {\n    type: constants.SEARCH_IS_LOADING\n  };\n}\n\nexport function clearSearch() {\n  return {\n    type: constants.CLEAR_SEARCH\n  };\n}\n\nfunction getGenres() {\n  return axios.get('https://api.themoviedb.org/3/genre/movie/list?api_key=79d36b7841b090ecd252b160c9f3d79d&language=en-US');\n}\n\nfunction getPopular(page) {\n  return axios.get('https://api.themoviedb.org/3/movie/popular?api_key=79d36b7841b090ecd252b160c9f3d79d&language=en-US&page=' + page);\n}\n\nfunction getLatest(page) {\n  return axios.get('https://api.themoviedb.org/3/movie/now_playing?api_key=79d36b7841b090ecd252b160c9f3d79d&language=en-US&page=' + page);\n}\n\nfunction getSearch(query) {\n  return axios.get('https://api.themoviedb.org/3/search/movie?api_key=79d36b7841b090ecd252b160c9f3d79d&language=en-US&query=' + query + '&page=1&include_adult=false');\n}\n\nexport function doSearch(query) {\n  return function (dispatch) {\n    dispatch(searchIsLoading());\n    var movies = [];\n    axios.all([getGenres(), getSearch(query)]).then(axios.spread(function (genres, search) {\n      search.data.results.forEach(function (element) {\n        var genresTitles = genres.data.genres.map(function (genre, index) {\n          return element.genre_ids.includes(genre.id) ? genre.name : null;\n        }).filter(function (genre) {\n          return genre != null;\n        });\n        movies.push({\n          'id': element.id,\n          'title': element.title,\n          'rating': element.vote_average,\n          'genres': genresTitles\n        });\n      });\n      var result = movies.map(function (movie, index) {\n        return index % 2 === 0 ? movies.slice(index, index + 2) : null;\n      }).filter(function (movie) {\n        return movie != null;\n      });\n      return dispatch(setSearchResult(result));\n    })).catch(function (error) {\n      console.log(error);\n    });\n  };\n}\nexport function getMovie(movieId) {\n  return function (dispatch) {\n    dispatch(movieIsLoading());\n    axios.get('https://api.themoviedb.org/3/movie/' + movieId + '?api_key=79d36b7841b090ecd252b160c9f3d79d&language=en-US').then(function (movieInfo) {\n      var genresTitles = movieInfo.data.genres.map(function (genre, index) {\n        return genre.name;\n      }).filter(function (genre) {\n        return genre != null;\n      });\n      var inWatchlist = false;\n      JSON.parse(localStorage.getItem('watchlistMovies')).forEach(function (e) {\n        if (e.id === movieInfo.data.id) {\n          inWatchlist = true;\n        }\n      });\n      return dispatch(setMovie({\n        'id': movieInfo.data.id,\n        'title': movieInfo.data.title,\n        'overview': movieInfo.data.overview,\n        'poster': movieInfo.data.poster_path,\n        'rating': movieInfo.data.vote_average,\n        'genres': genresTitles,\n        'inWatchlist': inWatchlist\n      }));\n    }).catch(function (error) {\n      console.log(error);\n      return dispatch(movieHasError(error.message));\n    });\n  };\n}\nexport function getPopularMovies(page) {\n  return function (dispatch) {\n    dispatch(moviesAreLoading());\n    var movies = [];\n    axios.all([getGenres(), getPopular(page)]).then(axios.spread(function (genres, popular) {\n      popular.data.results.forEach(function (element) {\n        var genresTitles = genres.data.genres.map(function (genre, index) {\n          return element.genre_ids.includes(genre.id) ? genre.name : null;\n        }).filter(function (genre) {\n          return genre != null;\n        });\n        var inWatchlist = false;\n        JSON.parse(localStorage.getItem('watchlistMovies')).forEach(function (e) {\n          if (e.id === element.id) {\n            inWatchlist = true;\n          }\n        });\n        movies.push({\n          'id': element.id,\n          'title': element.title,\n          'poster': element.poster_path,\n          'rating': element.vote_average,\n          'genres': genresTitles,\n          'inWatchlist': inWatchlist\n        });\n      });\n      var result = movies.map(function (movie, index) {\n        return index % 4 === 0 ? movies.slice(index, index + 4) : null;\n      }).filter(function (movie) {\n        return movie != null;\n      });\n      return dispatch(setPopular({\n        'activePagePopular': page,\n        'totalMovies': popular.data.total_results,\n        'movies': result\n      }));\n    })).catch(function (error) {\n      console.log(error);\n    });\n  };\n}\nexport function getLatestMovies(page) {\n  return function (dispatch) {\n    dispatch(moviesAreLoading());\n    var movies = [];\n    axios.all([getGenres(), getLatest(page)]).then(axios.spread(function (genres, latest) {\n      latest.data.results.forEach(function (element) {\n        var genresTitles = genres.data.genres.map(function (genre, index) {\n          return element.genre_ids.includes(genre.id) ? genre.name : null;\n        }).filter(function (genre) {\n          return genre != null;\n        });\n        var inWatchlist = false;\n        JSON.parse(localStorage.getItem('watchlistMovies')).forEach(function (e) {\n          if (e.id === element.id) {\n            inWatchlist = true;\n          }\n        });\n        movies.push({\n          'id': element.id,\n          'title': element.title,\n          'poster': element.poster_path,\n          'rating': element.vote_average,\n          'genres': genresTitles,\n          'inWatchlist': inWatchlist\n        });\n      });\n      var result = movies.map(function (movie, index) {\n        return index % 4 === 0 ? movies.slice(index, index + 4) : null;\n      }).filter(function (movie) {\n        return movie != null;\n      });\n      return dispatch(setLatest({\n        'activePageLatest': page,\n        'totalMovies': latest.data.total_results,\n        'movies': result\n      }));\n    })).catch(function (error) {\n      console.log(error);\n    });\n  };\n}","map":{"version":3,"sources":["/Users/allar-alexeyalexandrovich/20.12.18/moveirstore/src/actions/movies.js"],"names":["constants","axios","setPopular","results","type","SET_POPULAR","payload","setLatest","SET_LATEST","setMovie","SET_MOVIE","moviesAreLoading","MOVIES_ARE_LOADING","movieIsLoading","MOVIE_IS_LOADING","movieHasError","MOVIE_HAS_ERROR","setSearchResult","SET_SEARCH","searchIsLoading","SEARCH_IS_LOADING","clearSearch","CLEAR_SEARCH","getGenres","get","getPopular","page","getLatest","getSearch","query","doSearch","dispatch","movies","all","then","spread","genres","search","data","forEach","element","genresTitles","map","genre","index","genre_ids","includes","id","name","filter","push","title","vote_average","result","movie","slice","catch","error","console","log","getMovie","movieId","movieInfo","inWatchlist","JSON","parse","localStorage","getItem","e","overview","poster_path","message","getPopularMovies","popular","total_results","getLatestMovies","latest"],"mappings":"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","sourcesContent":["import * as constants from '../constants';\nimport axios from 'axios';\n\nfunction setPopular(results) {\n  return {\n    type: constants.SET_POPULAR,\n    payload: results\n  }\n}\n\nfunction setLatest(results) {\n  return {\n    type: constants.SET_LATEST,\n    payload: results\n  }\n}\n\nfunction setMovie(results) {\n  return {\n    type: constants.SET_MOVIE,\n    payload: results\n  }\n}\n\nfunction moviesAreLoading() {\n  return {\n      type: constants.MOVIES_ARE_LOADING\n  };\n}\n\nfunction movieIsLoading() {\n  return {\n      type: constants.MOVIE_IS_LOADING\n  };\n}\n\nfunction movieHasError(results) {\n  return {\n    type: constants.MOVIE_HAS_ERROR,\n    payload: results\n  }\n}\n\nfunction setSearchResult(results) {\n  return {\n    type: constants.SET_SEARCH,\n    payload: results\n  }\n}\n\nfunction searchIsLoading() {\n  return {\n      type: constants.SEARCH_IS_LOADING\n  };\n}\n\nexport function clearSearch(){\n  return {\n    type: constants.CLEAR_SEARCH\n  };\n}\n\nfunction getGenres() {\n  return axios.get('https://api.themoviedb.org/3/genre/movie/list?api_key=79d36b7841b090ecd252b160c9f3d79d&language=en-US');\n}\n\nfunction getPopular(page) {\n  return axios.get('https://api.themoviedb.org/3/movie/popular?api_key=79d36b7841b090ecd252b160c9f3d79d&language=en-US&page='+page);\n}\n\nfunction getLatest(page) {\n  return axios.get('https://api.themoviedb.org/3/movie/now_playing?api_key=79d36b7841b090ecd252b160c9f3d79d&language=en-US&page='+page);\n}\n\nfunction getSearch(query) {\n  return axios.get('https://api.themoviedb.org/3/search/movie?api_key=79d36b7841b090ecd252b160c9f3d79d&language=en-US&query='+query+'&page=1&include_adult=false');\n}\n\nexport function doSearch(query) {\n\n  return function(dispatch) {\n\n    dispatch(searchIsLoading());\n    \n    let movies = [];\n\n    axios.all([getGenres(), getSearch(query)])\n    .then(axios.spread(function (genres, search) {\n      \n      search.data.results.forEach(element => {\n\n        let genresTitles = genres.data.genres.map((genre, index) => {\n          return element.genre_ids.includes(genre.id) ? genre.name : null;\n        }).filter(genre => genre != null);\n\n        movies.push({'id':element.id, 'title' : element.title, 'rating': element.vote_average, 'genres': genresTitles}); \n      });\n\n      let result = movies.map((movie, index) => {\n        return index % 2 === 0 ? movies.slice(index, index + 2) : null;\n      }).filter(movie => movie != null);\n\n      return dispatch(setSearchResult(\n        result\n      ));\n\n    })).catch(function (error) {\n      console.log(error);\n    });\n  }\n}\n\nexport function getMovie(movieId) {\n\n  return function(dispatch) {\n\n    dispatch(movieIsLoading());\n    \n    axios.get('https://api.themoviedb.org/3/movie/'+movieId+'?api_key=79d36b7841b090ecd252b160c9f3d79d&language=en-US')\n    .then(function (movieInfo) {\n\n      let genresTitles = movieInfo.data.genres.map((genre, index) => {\n        return genre.name;\n      }).filter(genre => genre != null);\n\n      let inWatchlist = false;\n\n      JSON.parse(localStorage.getItem('watchlistMovies')).forEach(e => {\n\n        if (e.id === movieInfo.data.id){\n          inWatchlist = true ;\n        }\n      }); \n\n      return dispatch(setMovie(\n        {'id':movieInfo.data.id, 'title' : movieInfo.data.title, 'overview': movieInfo.data.overview, 'poster': movieInfo.data.poster_path, 'rating': movieInfo.data.vote_average, 'genres': genresTitles, 'inWatchlist': inWatchlist}\n      ));\n\n    }).catch(function (error) {\n      \n      console.log(error);\n      return dispatch(movieHasError(error.message));\n    });\n  }\n}\n\nexport function getPopularMovies(page) {\n\n  return function(dispatch) {\n\n    dispatch(moviesAreLoading());\n\n    let movies = [];\n\n    axios.all([getGenres(), getPopular(page)])\n    .then(axios.spread(function (genres, popular) {\n      \n      popular.data.results.forEach(element => {\n\n        let genresTitles = genres.data.genres.map((genre, index) => {\n          return element.genre_ids.includes(genre.id) ? genre.name : null;\n        }).filter(genre => genre != null);\n\n        let inWatchlist = false;\n\n        JSON.parse(localStorage.getItem('watchlistMovies')).forEach(e => {\n\n          if (e.id === element.id){\n            inWatchlist = true ;\n          }\n        }); \n\n        movies.push({'id':element.id, 'title' : element.title, 'poster': element.poster_path, 'rating': element.vote_average, 'genres': genresTitles, 'inWatchlist': inWatchlist}); \n      });\n\n      let result = movies.map((movie, index) => {\n        return index % 4 === 0 ? movies.slice(index, index + 4) : null;\n      }).filter(movie => movie != null);\n\n      return dispatch(setPopular(\n        {'activePagePopular':page,'totalMovies':popular.data.total_results, 'movies':result}\n      ));\n\n    })).catch(function (error) {\n      console.log(error);\n    });\n  }\n}\n\nexport function getLatestMovies(page) {\n  \n  return function(dispatch) {\n\n    dispatch(moviesAreLoading());\n\n    let movies = [];\n\n    axios.all([getGenres(), getLatest(page)])\n    .then(axios.spread(function (genres, latest) {\n\n      latest.data.results.forEach(element => {\n\n        let genresTitles = genres.data.genres.map((genre, index) => {\n          return element.genre_ids.includes(genre.id) ? genre.name : null;\n        }).filter(genre => genre != null);\n\n        let inWatchlist = false;\n\n        JSON.parse(localStorage.getItem('watchlistMovies')).forEach(e => {\n \n          if (e.id === element.id){\n            inWatchlist = true ;\n          }\n        }); \n\n        movies.push({'id':element.id, 'title' : element.title, 'poster': element.poster_path, 'rating': element.vote_average, 'genres': genresTitles, 'inWatchlist': inWatchlist}); \n      });\n\n      let result = movies.map((movie, index) => {\n        return index % 4 === 0 ? movies.slice(index, index + 4) : null;\n      }).filter(movie => movie != null);\n\n      return dispatch(setLatest(\n        {'activePageLatest':page,'totalMovies':latest.data.total_results, 'movies':result}\n      ));\n\n    })).catch(function (error) {\n      console.log(error);\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}