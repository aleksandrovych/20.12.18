{"ast":null,"code":"import _toConsumableArray from \"/Users/allar-alexeyalexandrovich/20.12.18/moveirstore/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/allar-alexeyalexandrovich/20.12.18/moveirstore/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as constants from '../constants';\n\nif (localStorage.getItem('watchlistMovies') === null) {\n  localStorage.setItem('watchlistMovies', JSON.stringify([]));\n}\n\nvar initialState = {\n  moviesAreLoading: false,\n  movieIsLoading: false,\n  movieHasError: null,\n  movie: null,\n  activePagePopular: 1,\n  activePageLatest: 1,\n  totalMovies: 1,\n  movies: [],\n  searchIsLoading: false,\n  search: [],\n  watchlistMovies: JSON.parse(localStorage.getItem('watchlistMovies'))\n};\n\nvar moviesReducer = function moviesReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case constants.SET_POPULAR:\n      {\n        return _objectSpread({}, state, {\n          moviesAreLoading: false,\n          activePagePopular: action.payload.activePagePopular,\n          totalMovies: action.payload.totalMovies,\n          movies: action.payload.movies\n        });\n      }\n\n    case constants.SET_LATEST:\n      {\n        return _objectSpread({}, state, {\n          moviesAreLoading: false,\n          activePageLatest: action.payload.activePageLatest,\n          totalMovies: action.payload.totalMovies,\n          movies: action.payload.movies\n        });\n      }\n\n    case constants.SET_SEARCH:\n      {\n        return _objectSpread({}, state, {\n          searchIsLoading: false,\n          search: action.payload\n        });\n      }\n\n    case constants.SET_MOVIE:\n      {\n        return _objectSpread({}, state, {\n          movieIsLoading: false,\n          movieHasError: null,\n          movie: action.payload\n        });\n      }\n\n    case constants.MOVIES_ARE_LOADING:\n      {\n        return _objectSpread({}, state, {\n          moviesAreLoading: true\n        });\n      }\n\n    case constants.SEARCH_IS_LOADING:\n      {\n        return _objectSpread({}, state, {\n          searchIsLoading: true\n        });\n      }\n\n    case constants.CLEAR_SEARCH:\n      {\n        return _objectSpread({}, state, {\n          searchIsLoading: false,\n          search: []\n        });\n      }\n\n    case constants.MOVIE_IS_LOADING:\n      {\n        return _objectSpread({}, state, {\n          movieIsLoading: true\n        });\n      }\n\n    case constants.MOVIE_HAS_ERROR:\n      {\n        return _objectSpread({}, state, {\n          movieHasError: action.payload,\n          movieIsLoading: false\n        });\n      }\n\n    case constants.ADD_TO_WATCHLIST:\n      {\n        var newList = [].concat(_toConsumableArray(state.watchlistMovies), [action.payload.movie]);\n        localStorage.setItem('watchlistMovies', JSON.stringify(newList));\n        return _objectSpread({}, state, {\n          movie: action.payload.movie,\n          watchlistMovies: newList\n        });\n      }\n\n    case constants.REMOVE_FROM_WATCHLIST:\n      {\n        var _newList = state.watchlistMovies.filter(function (movie) {\n          return movie.id !== action.payload.movie.id;\n        });\n\n        localStorage.setItem('watchlistMovies', JSON.stringify(_newList));\n        return _objectSpread({}, state, {\n          movie: action.payload.movie,\n          watchlistMovies: _newList\n        });\n      }\n\n    case constants.REMOVE_FROM_WATCHLIST_FROM_WATCHLIST:\n      {\n        var _newList2 = state.watchlistMovies.filter(function (movie) {\n          return movie !== action.payload;\n        });\n\n        localStorage.setItem('watchlistMovies', JSON.stringify(_newList2));\n        return _objectSpread({}, state, {\n          watchlistMovies: _newList2\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default moviesReducer;","map":{"version":3,"sources":["/Users/allar-alexeyalexandrovich/20.12.18/moveirstore/src/reducers/movies.js"],"names":["constants","localStorage","getItem","setItem","JSON","stringify","initialState","moviesAreLoading","movieIsLoading","movieHasError","movie","activePagePopular","activePageLatest","totalMovies","movies","searchIsLoading","search","watchlistMovies","parse","moviesReducer","state","action","type","SET_POPULAR","payload","SET_LATEST","SET_SEARCH","SET_MOVIE","MOVIES_ARE_LOADING","SEARCH_IS_LOADING","CLEAR_SEARCH","MOVIE_IS_LOADING","MOVIE_HAS_ERROR","ADD_TO_WATCHLIST","newList","REMOVE_FROM_WATCHLIST","filter","id","REMOVE_FROM_WATCHLIST_FROM_WATCHLIST"],"mappings":"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","sourcesContent":["import * as constants from '../constants';\n\nif(localStorage.getItem('watchlistMovies') === null){\n  localStorage.setItem('watchlistMovies', JSON.stringify([]));\n}\n\nconst initialState = {\n  moviesAreLoading: false,\n  movieIsLoading: false,\n  movieHasError:null,\n  movie:null,\n  activePagePopular: 1,\n  activePageLatest: 1,\n  totalMovies: 1,\n  movies:[],\n  searchIsLoading:false,\n  search:[],\n  watchlistMovies:JSON.parse(localStorage.getItem('watchlistMovies'))\n}\n  \nconst moviesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case constants.SET_POPULAR:{\n      return {\n        ...state,\n        moviesAreLoading: false,\n        activePagePopular: action.payload.activePagePopular,\n        totalMovies: action.payload.totalMovies,\n        movies: action.payload.movies\n      }\n    }\n    case constants.SET_LATEST:{\n      return {\n        ...state,\n        moviesAreLoading: false,\n        activePageLatest: action.payload.activePageLatest,\n        totalMovies: action.payload.totalMovies,\n        movies: action.payload.movies\n      }\n    }\n    case constants.SET_SEARCH:{\n      return {\n        ...state,\n        searchIsLoading: false,\n        search: action.payload\n      }\n    }\n    case constants.SET_MOVIE:{\n      return {\n        ...state,\n        movieIsLoading: false,\n        movieHasError: null,\n        movie: action.payload\n      }\n    }\n    case constants.MOVIES_ARE_LOADING:{\n      return {\n        ...state,\n        moviesAreLoading: true\n      }\n    }\n    case constants.SEARCH_IS_LOADING:{\n      return {\n        ...state,\n        searchIsLoading: true\n      }\n    }\n    case constants.CLEAR_SEARCH:{\n      return {\n        ...state,\n        searchIsLoading: false,\n        search:[]\n      }\n    }\n    case constants.MOVIE_IS_LOADING:{\n      return {\n        ...state,\n        movieIsLoading: true\n      }\n    }\n    case constants.MOVIE_HAS_ERROR:{\n      return {\n        ...state,\n        movieHasError: action.payload,\n        movieIsLoading: false\n      }\n    }\n    case constants.ADD_TO_WATCHLIST:{\n\n      let newList = [...state.watchlistMovies, action.payload.movie];\n\n      localStorage.setItem('watchlistMovies', JSON.stringify(newList));\n\n      return {\n        ...state,\n        movie: action.payload.movie,\n        watchlistMovies: newList\n      }\n    }\n    case constants.REMOVE_FROM_WATCHLIST:{\n\n      let newList = state.watchlistMovies.filter(movie => movie.id !== action.payload.movie.id);\n\n      localStorage.setItem('watchlistMovies', JSON.stringify(newList));\n\n      return {\n        ...state,\n        movie: action.payload.movie,\n        watchlistMovies: newList\n      }\n    }\n    case constants.REMOVE_FROM_WATCHLIST_FROM_WATCHLIST:{\n\n      let newList = state.watchlistMovies.filter(movie => movie !== action.payload);\n\n      localStorage.setItem('watchlistMovies', JSON.stringify(newList));\n\n      return {\n        ...state,\n        watchlistMovies: newList\n      }\n    }\n    default:\n      return state;\n  }\n}\n  \nexport default moviesReducer"]},"metadata":{},"sourceType":"module"}