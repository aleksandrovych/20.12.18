{"ast":null,"code":"import _classCallCheck from \"/Users/allar-alexeyalexandrovich/20.12.18/moveirstore/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/allar-alexeyalexandrovich/20.12.18/moveirstore/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/allar-alexeyalexandrovich/20.12.18/moveirstore/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/allar-alexeyalexandrovich/20.12.18/moveirstore/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/allar-alexeyalexandrovich/20.12.18/moveirstore/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/allar-alexeyalexandrovich/20.12.18/moveirstore/src/SearchFlow.js\";\nimport _ from 'lodash';\nimport faker from 'faker';\nimport React, { Component } from 'react';\nimport { Search, Grid, Header, Segment } from 'semantic-ui-react';\nimport { doSearch, clearSearch } from './actions/movies';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport history from './history';\n\nvar source = function source(sorceArray) {\n  return sorceArray.map(function (item) {\n    return {\n      title: item.title.slice(0, 30),\n      description: item.desc.slice(0, 70),\n      image: item !== null && item.src !== null ? 'https://image.tmdb.org/t/p/w500' + item.src : 'https://cdn.sstatic.net/Sites/stackoverflow/img/404.svg',\n      price: \"Rating: \" + item.rating,\n      id: item.id\n    };\n  });\n};\n\nvar SearchStandard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchStandard, _Component);\n\n  function SearchStandard(props) {\n    var _this;\n\n    _classCallCheck(this, SearchStandard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchStandard).call(this, props));\n\n    _this.resetComponent = function () {\n      return _this.setState({\n        isLoading: false,\n        results: [],\n        value: ''\n      });\n    };\n\n    _this.handleResultSelect = function (e, _ref) {\n      var result = _ref.result;\n      return _this.setState({\n        value: result.title\n      });\n    };\n\n    _this.onInputChange = function (event) {\n      var _this$props = _this.props,\n          doSearch = _this$props.doSearch,\n          clearSearch = _this$props.clearSearch;\n      var query = event.target.value.toLowerCase();\n\n      _this.setState({\n        value: query,\n        isLoading: _this.props.searchIsLoading\n      }, function () {\n        if (query && query.length > 1) {\n          doSearch(query);\n        } else {\n          console.log('reset'); //                this.resetComponent()\n\n          clearSearch();\n        }\n      });\n    };\n\n    _this.state = {\n      value: '',\n      results: _this.props.search\n    };\n    return _this;\n  }\n\n  _createClass(SearchStandard, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.resetComponent();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var value = this.state.value;\n      var _this$props2 = this.props,\n          searchIsLoading = _this$props2.searchIsLoading,\n          search = _this$props2.search;\n      var re = new RegExp(_.escapeRegExp(value), 'i');\n\n      var isMatch = function isMatch(result) {\n        return re.test(result.title);\n      };\n\n      var reducer = function reducer(a, b) {\n        return a.concat(b);\n      };\n\n      var parsed = search.reduce(reducer, []);\n      return React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Search, Object.assign({\n        loading: searchIsLoading,\n        onResultSelect: this.handleResultSelect,\n        onSearchChange: _.debounce(this.onInputChange, 500, {\n          leading: true\n        }),\n        results: _.filter(source(parsed), isMatch),\n        value: value\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return SearchStandard;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    search: state.movies.search,\n    searchIsLoading: state.movies.searchIsLoading,\n    pathname: state.router.location.pathname,\n    watchlistMovies: state.movies.watchlistMovies\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    doSearch: doSearch,\n    clearSearch: clearSearch\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchStandard);","map":{"version":3,"sources":["/Users/allar-alexeyalexandrovich/20.12.18/moveirstore/src/SearchFlow.js"],"names":["_","faker","React","Component","Search","Grid","Header","Segment","doSearch","clearSearch","connect","bindActionCreators","history","source","sorceArray","map","item","title","slice","description","desc","image","src","price","rating","id","SearchStandard","props","resetComponent","setState","isLoading","results","value","handleResultSelect","e","result","onInputChange","event","query","target","toLowerCase","searchIsLoading","length","console","log","state","search","re","RegExp","escapeRegExp","isMatch","test","reducer","a","b","concat","parsed","reduce","debounce","leading","filter","mapStateToProps","movies","pathname","router","location","watchlistMovies","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport faker from 'faker'\nimport React, {Component} from 'react'\nimport {Search, Grid, Header, Segment} from 'semantic-ui-react'\nimport {doSearch, clearSearch} from './actions/movies';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport history from './history'\n\nconst source = sorceArray => sorceArray.map(item => ({\n    title: item.title.slice(0, 30),\n    description: item.desc.slice(0, 70),\n    image: item !== null && item.src !== null  ? 'https://image.tmdb.org/t/p/w500'+item.src : 'https://cdn.sstatic.net/Sites/stackoverflow/img/404.svg',\n    price: \"Rating: \" + item.rating,\n    id: item.id,\n}))\n\n\nclass SearchStandard extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            value: '',\n            results: this.props.search,\n        }\n    }\n\n    componentWillMount() {\n        this.resetComponent()\n    }\n\n    resetComponent = () => this.setState({isLoading: false, results: [], value: ''})\n\n    handleResultSelect = (e, {result}) => this.setState({value: result.title})\n\n\n    onInputChange = (event) => {\n\n        let {doSearch, clearSearch} = this.props;\n        let query = event.target.value.toLowerCase();\n        this.setState({\n            value: query,\n            isLoading: this.props.searchIsLoading,\n        }, () => {\n            if (query && query.length > 1) {\n                doSearch(query);\n            } else {\n                console.log('reset')\n\n//                this.resetComponent()\n                clearSearch();\n            }\n        })\n    }\n\n\n    render() {\n        const {value} = this.state\n        let {searchIsLoading, search} = this.props;\n\n        const re = new RegExp(_.escapeRegExp(value), 'i')\n        const isMatch = result => re.test(result.title)\n\n        const reducer = function(a, b) { return a.concat(b);}\n        const parsed = search.reduce(reducer, []);\n\n        return (\n            < Grid>\n                < Grid.Column\n                    width={6}>\n                    < Search\n                        loading={searchIsLoading}\n                        onResultSelect={this.handleResultSelect}\n                        onSearchChange={_.debounce(this.onInputChange, 500, {leading: true})}\n                        results={ _.filter(source(parsed), isMatch)}\n                        value={value}\n                        {...\n                            this.props\n                        }\n                    />\n                    <\n                    /Grid.Column>\n\n                    <\n                    /Grid>\n                    )\n                    }\n                    }\n\n                    const mapStateToProps = (state) => {\n\n                        return {\n                            search:state.movies.search,\n                            searchIsLoading:state.movies.searchIsLoading,\n                            pathname: state.router.location.pathname,\n                            watchlistMovies:state.movies.watchlistMovies\n                        }\n                    }\n\n                    const mapDispatchToProps = dispatch => bindActionCreators({\n                    doSearch,\n                    clearSearch\n                }, dispatch)\n                    export default connect(mapStateToProps, mapDispatchToProps)(SearchStandard);\n"]},"metadata":{},"sourceType":"module"}