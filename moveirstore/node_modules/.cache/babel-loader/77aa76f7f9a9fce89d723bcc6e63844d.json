{"ast":null,"code":"import _classCallCheck from \"/Users/allar-alexeyalexandrovich/20.12.18/moveirstore/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/allar-alexeyalexandrovich/20.12.18/moveirstore/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/allar-alexeyalexandrovich/20.12.18/moveirstore/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/allar-alexeyalexandrovich/20.12.18/moveirstore/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/allar-alexeyalexandrovich/20.12.18/moveirstore/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/allar-alexeyalexandrovich/20.12.18/moveirstore/src/MovieDetail.js\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { getMovie } from './actions/movies';\nimport { Image, Header, Container, Label, Progress } from 'semantic-ui-react';\n\nvar MovieDetail =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MovieDetail, _Component);\n\n  function MovieDetail() {\n    _classCallCheck(this, MovieDetail);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MovieDetail).apply(this, arguments));\n  }\n\n  _createClass(MovieDetail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var getMovie = this.props.getMovie;\n      getMovie(parseInt(this.props.match.params.movieId, 10));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          movieIsLoading = _this$props.movieIsLoading,\n          movieHasError = _this$props.movieHasError,\n          movie = _this$props.movie;\n      var poster = movie !== null && movie.poster !== null ? 'https://image.tmdb.org/t/p/w500' + movie.poster : 'https://cdn.sstatic.net/Sites/stackoverflow/img/404.svg';\n      var title = movie !== null ? movie.title : '';\n      var overview = movie !== null ? movie.overview : '';\n      var genres = movie !== null && movie.genres != null ? movie.genres : [];\n      var genresColors = ['yellow', \"olive\", \"green\", \"teal\", \"blue\", \"violet\", \"purple\"];\n      var rating = movie != null && movie != undefined ? movie.rating : 0;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(Image, {\n        style: {\n          display: \"flex\",\n          float: \"left\",\n          paddingRight: \"30px\"\n        },\n        src: poster,\n        size: \"large\",\n        left: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          paddingLeft: \"30px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(Header, {\n        style: {\n          display: \"block\",\n          color: \"#008080\"\n        },\n        as: \"h1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, title), React.createElement(Container, {\n        style: {\n          display: \"block\",\n          font: \"regular 120% serif\"\n        },\n        text: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, overview), genres.map(function (text, index) {\n        return React.createElement(Label, {\n          style: {\n            marginRight: \"10px\"\n          },\n          key: text,\n          basic: true,\n          color: genresColors[index % genresColors.length],\n          pointing: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, text);\n      }), React.createElement(Progress, {\n        active: true,\n        indicating: true,\n        style: {\n          display: \"block\"\n        },\n        percent: rating * 10,\n        precision: 0.3,\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Rating\")));\n    }\n  }]);\n\n  return MovieDetail;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    movie: state.movies.movie,\n    movieIsLoading: state.movies.movieIsLoading,\n    movieHasError: state.movies.movieHasError\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getMovie: getMovie\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieDetail);","map":{"version":3,"sources":["/Users/allar-alexeyalexandrovich/20.12.18/moveirstore/src/MovieDetail.js"],"names":["React","Component","bindActionCreators","connect","getMovie","Image","Header","Container","Label","Progress","MovieDetail","props","parseInt","match","params","movieId","movieIsLoading","movieHasError","movie","poster","title","overview","genres","genresColors","rating","undefined","display","float","paddingRight","paddingLeft","color","font","map","text","index","marginRight","length","mapStateToProps","state","movies","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { getMovie } from './actions/movies';\nimport {Image, Header, Container, Label, Progress} from 'semantic-ui-react'\n\nclass MovieDetail extends Component {\n\n    componentDidMount(){\n\n        let { getMovie } = this.props;\n\n        getMovie(parseInt(this.props.match.params.movieId, 10));\n\n    }\n\n    render() {\n\n        let {movieIsLoading, movieHasError, movie} = this.props\n        let poster = movie !== null && movie.poster !== null  ? 'https://image.tmdb.org/t/p/w500'+movie.poster : 'https://cdn.sstatic.net/Sites/stackoverflow/img/404.svg'\n        let title = movie !== null ? movie.title : ''\n        let overview = movie !== null ? movie.overview : ''\n        let genres = (movie !== null && movie.genres != null) ? movie.genres : []\n        let genresColors = ['yellow', \"olive\", \"green\", \"teal\", \"blue\", \"violet\", \"purple\",]\n        let rating = movie != null && movie != undefined ? movie.rating : 0\n        return (\n            <div>\n                <Image style={{display: \"flex\", float: \"left\", paddingRight: \"30px\"}} src={poster} size='large' left  />\n                <div style={{ paddingLeft: \"30px\",}}>\n                <Header style={{display: \"block\", color: \"#008080\"}} as='h1'>{title}</Header>\n                <Container style={{display: \"block\", font: \"regular 120% serif\"}} text>\n                    {overview}\n                </Container>\n                    {genres.map((text, index) => <Label style={{marginRight: \"10px\"}} key={text} basic color={genresColors[index%genresColors.length]} pointing>{text}</Label>)}\n                    <Progress\n                        active\n                        indicating\n                        style = {{display: \"block\"}}\n                        percent={rating * 10}\n                        precision={0.3}\n                        size='small'\n                    >\n                        Rating\n                    </Progress>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        movie:state.movies.movie,\n        movieIsLoading:state.movies.movieIsLoading,\n        movieHasError:state.movies.movieHasError\n    }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    getMovie\n}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieDetail);"]},"metadata":{},"sourceType":"module"}