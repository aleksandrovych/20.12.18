{"ast":null,"code":"import * as _classNames from 'classnames';\nimport { createElement, Component, Children, cloneElement } from 'react';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\n\nvar extendStatics = Object.setPrototypeOf || {\n  __proto__: []\n} instanceof Array && function (d, b) {\n  d.__proto__ = b;\n} || function (d, b) {\n  for (var p in b) {\n    if (b.hasOwnProperty(p)) d[p] = b[p];\n  }\n};\n\nfunction __extends(d, b) {\n  extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar __assign = Object.assign || function __assign(t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) {\n      if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n  }\n\n  return t;\n};\n\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\n\nvar classNames = _classNames;\n\nfunction setClassNames(props) {\n  var _a;\n\n  var isClassNameSet = props.className ? true : false;\n  var isHeightSet = props.height ? true : false;\n  var isWidthSet = props.width ? true : false;\n  var isAlignSet = props.align ? true : false;\n  var isBackgroundSet = props.background ? true : false;\n  var isPositionSet = props.position ? true : false;\n  return classNames((_a = {}, _a[\"\" + props.className] = isClassNameSet, _a[\"uk-align-\" + props.align] = isAlignSet, _a[\"uk-height-\" + props.height] = isHeightSet, _a[\"uk-width-\" + props.width] = isWidthSet, _a[\"uk-background-\" + props.background] = isBackgroundSet, _a[\"uk-position-\" + props.position] = isPositionSet, _a));\n}\n\nvar Accordion =\n/** @class */\nfunction (_super) {\n  __extends(Accordion, _super);\n\n  function Accordion() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Accordion.prototype.render = function () {\n    return createElement(\"ul\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: setClassNames(this.props),\n      \"data-uk-accordion\": this.props.options ? this.props.options : \"\"\n    }, this.props.children);\n  };\n\n  return Accordion;\n}(Component);\n\nvar AccordionItem =\n/** @class */\nfunction (_super) {\n  __extends(AccordionItem, _super);\n\n  function AccordionItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  AccordionItem.prototype.render = function () {\n    var _a = this.props,\n        title = _a.title,\n        content = _a.content,\n        rest = __rest(_a, [\"title\", \"content\"]);\n\n    return createElement(\"li\", __assign({}, rest), createElement(\"a\", {\n      className: \"uk-accordion-title\",\n      href: \"#\"\n    }, title), createElement(\"div\", {\n      className: \"uk-accordion-content\"\n    }, content));\n  };\n\n  return AccordionItem;\n}(Component);\n\nvar classNames$2 = _classNames;\n\nvar Icon =\n/** @class */\nfunction (_super) {\n  __extends(Icon, _super);\n\n  function Icon() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Icon.prototype.render = function () {\n    return this.renderIconType();\n  };\n\n  Icon.prototype.renderIconType = function () {\n    if (this.props.href) {\n      return createElement(\"a\", {\n        id: this.props.id ? this.props.id : null,\n        style: this.props.style ? this.props.style : null,\n        className: this.getClassNames(),\n        href: this.props.href,\n        \"uk-icon\": this.props.options\n      });\n    } else if (this.props.image) {\n      return createElement(\"span\", {\n        id: this.props.id ? this.props.id : null,\n        className: this.getClassNames(),\n        style: __assign({\n          backgroundImage: \"url(\" + this.props.image + \")\"\n        }, this.props.style),\n        \"uk-icon\": this.props.options\n      });\n    } else {\n      return createElement(\"em\", {\n        id: this.props.id ? this.props.id : null,\n        style: this.props.style ? this.props.style : null,\n        className: this.getClassNames(),\n        \"uk-icon\": this.props.options\n      });\n    }\n  };\n\n  Icon.prototype.getClassNames = function () {\n    var _a;\n\n    return classNames$2((_a = {}, _a[\"uk-icon\"] = true, _a[\"uk-icon-button\"] = this.props.button, _a[\"uk-icon-link\"] = !!this.props.href, _a[\"uk-icon-image\"] = !!this.props.image, _a[\"\" + setClassNames(this.props)] = true, _a));\n  };\n\n  return Icon;\n}(Component);\n\nvar classNames$3 = _classNames;\n\nvar Alert =\n/** @class */\nfunction (_super) {\n  __extends(Alert, _super);\n\n  function Alert(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.state = {\n      isOpen: true,\n      isClosed: false\n    };\n    return _this;\n  }\n\n  Alert.prototype.componentDidMount = function () {\n    var _this = this;\n\n    if (this.props.duration) {\n      this.durationTimeout = setTimeout(function () {\n        _this.handleClose();\n      }, this.props.duration);\n    }\n  };\n\n  Alert.prototype.componentWillUnmount = function () {\n    if (this.leaveTimeout) clearTimeout(this.leaveTimeout);\n    if (this.durationTimeout) clearTimeout(this.durationTimeout);\n  };\n\n  Alert.prototype.render = function () {\n    if (this.state.isClosed) return false;\n    return createElement(\"div\", {\n      id: this.props.id ? this.props.id : null,\n      className: this.setClassNames(),\n      style: __assign({\n        overflow: 'hidden',\n        transition: 'height 0.5s ease-in-out, opacity 0.3s ease-in-out',\n        height: !this.state.isOpen ? 0 : 'auto',\n        opacity: !this.state.isOpen ? 0 : 1\n      }, this.props.style)\n    }, this.props.isClosable ? createElement(\"a\", {\n      className: \"uk-alert-close\",\n      onClick: this.handleClose.bind(this)\n    }, createElement(Icon, {\n      options: \"close\"\n    })) : null, createElement(\"span\", null, this.props.content));\n  };\n\n  Alert.prototype.handleClose = function () {\n    var _this = this;\n\n    this.setState({\n      isOpen: false\n    }, function () {\n      if (_this.props.onBeforeHide) _this.props.onBeforeHide();\n      _this.leaveTimeout = setTimeout(function () {\n        _this.setState({\n          isClosed: true\n        });\n\n        if (_this.props.onHide) _this.props.onHide();\n      }, 505);\n    });\n  };\n\n  Alert.prototype.setClassNames = function () {\n    var _a;\n\n    return classNames$3('uk-alert', (_a = {}, _a[\"uk-alert-\" + this.props.color] = !!this.props.color, _a[setClassNames(this.props)] = true, _a));\n  };\n\n  return Alert;\n}(Component);\n\nvar Article =\n/** @class */\nfunction (_super) {\n  __extends(Article, _super);\n\n  function Article() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Article.prototype.render = function () {\n    return createElement(\"article\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: \"\\n                    uk-article\\n                    \" + setClassNames(this.props) + \"\\n                \"\n    }, createElement(\"h1\", {\n      className: \"uk-article-title\"\n    }, this.props.title), this.props.meta ? createElement(\"p\", {\n      className: \"uk-article-meta\"\n    }, this.props.meta) : '', this.props.lead ? createElement(\"p\", {\n      className: \"uk-text-lead\"\n    }, this.props.lead) : '', createElement(\"div\", null, this.props.children));\n  };\n\n  return Article;\n}(Component);\n\nvar Badge =\n/** @class */\nfunction (_super) {\n  __extends(Badge, _super);\n\n  function Badge() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Badge.prototype.render = function () {\n    return createElement(\"span\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: \"uk-badge \" + setClassNames(this.props)\n    }, this.props.count);\n  };\n\n  return Badge;\n}(Component);\n\nvar Breadcrumb =\n/** @class */\nfunction (_super) {\n  __extends(Breadcrumb, _super);\n\n  function Breadcrumb() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Breadcrumb.prototype.render = function () {\n    return createElement(\"ul\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: \"uk-breadcrumb \" + setClassNames(this.props)\n    }, this.props.children);\n  };\n\n  return Breadcrumb;\n}(Component);\n\nvar classNames$4 = _classNames;\n\nvar Button =\n/** @class */\nfunction (_super) {\n  __extends(Button, _super);\n\n  function Button() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Button.prototype.render = function () {\n    return this.isLink() ? createElement(\"a\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      \"uk-toggle\": this.props.toggleOptions,\n      href: this.props.href,\n      onClick: this.props.onClick,\n      className: this.setClassNames()\n    }, this.props.children) : createElement(\"button\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      \"uk-toggle\": this.props.toggleOptions,\n      onClick: this.props.onClick,\n      className: this.setClassNames()\n    }, this.props.children);\n  };\n\n  Button.prototype.isLink = function () {\n    return this.props.href ? true : false;\n  };\n\n  Button.prototype.setClassNames = function () {\n    var _a;\n\n    return classNames$4('uk-button', (_a = {}, _a[\"uk-button-default\"] = !this.props.color, _a[\"uk-button-\" + this.props.color] = !!this.props.color, _a[\"uk-button-\" + this.props.size] = !!this.props.size, _a[\"\" + setClassNames(this.props)] = true, _a));\n  };\n\n  return Button;\n}(Component);\n\nvar classNames$5 = _classNames;\n\nvar Card =\n/** @class */\nfunction (_super) {\n  __extends(Card, _super);\n\n  function Card() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Card.prototype.render = function () {\n    return createElement(\"div\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: this.setClassNames()\n    }, this.props.children);\n  };\n\n  Card.prototype.setClassNames = function () {\n    var _a;\n\n    return classNames$5('uk-card', (_a = {}, _a[\"uk-card-default\"] = !this.props.color, _a[\"uk-card-\" + this.props.color] = !!this.props.color, _a[\"uk-card-hover\"] = this.props.hover, _a[\"uk-card-\" + this.props.size] = !!this.props.size, _a[setClassNames(this.props)] = true, _a));\n  };\n\n  return Card;\n}(Component);\n\nvar CardBody =\n/** @class */\nfunction (_super) {\n  __extends(CardBody, _super);\n\n  function CardBody() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  CardBody.prototype.render = function () {\n    return createElement(\"div\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: \"uk-card-body \" + setClassNames(this.props)\n    }, this.props.children);\n  };\n\n  return CardBody;\n}(Component);\n\nvar CardFooter =\n/** @class */\nfunction (_super) {\n  __extends(CardFooter, _super);\n\n  function CardFooter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  CardFooter.prototype.render = function () {\n    return createElement(\"div\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: \"uk-card-footer \" + setClassNames(this.props)\n    }, this.props.children);\n  };\n\n  return CardFooter;\n}(Component);\n\nvar CardHeader =\n/** @class */\nfunction (_super) {\n  __extends(CardHeader, _super);\n\n  function CardHeader() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  CardHeader.prototype.render = function () {\n    return createElement(\"div\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: \"uk-card-header \" + setClassNames(this.props)\n    }, this.props.children);\n  };\n\n  return CardHeader;\n}(Component);\n\nvar CardTitle =\n/** @class */\nfunction (_super) {\n  __extends(CardTitle, _super);\n\n  function CardTitle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  CardTitle.prototype.render = function () {\n    return createElement(\"h3\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: \"uk-card-title \" + setClassNames(this.props)\n    }, this.props.children);\n  };\n\n  return CardTitle;\n}(Component);\n\nvar classNames$6 = _classNames;\n\nvar Container =\n/** @class */\nfunction (_super) {\n  __extends(Container, _super);\n\n  function Container() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Container.prototype.render = function () {\n    return createElement(\"div\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: this.setClassNames()\n    }, this.props.children);\n  };\n\n  Container.prototype.setClassNames = function () {\n    var _a;\n\n    return classNames$6((_a = {}, _a[\"uk-container\"] = true, _a[\"uk-container-\" + this.props.size] = !!this.props.size, _a[setClassNames(this.props)] = true, _a));\n  };\n\n  return Container;\n}(Component);\n\nvar Cover =\n/** @class */\nfunction (_super) {\n  __extends(Cover, _super);\n\n  function Cover() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Cover.prototype.render = function () {\n    return createElement(\"div\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: \"uk-cover-container \" + setClassNames(this.props)\n    }, this.renderResponsiveMode(), this.renderBasedOnType());\n  };\n\n  Cover.prototype.renderResponsiveMode = function () {\n    if (this.props.responsive) {\n      return createElement(\"canvas\", {\n        width: this.props.width,\n        height: this.props.height\n      });\n    }\n  };\n\n  Cover.prototype.renderBasedOnType = function () {\n    if (this.props.type === 'image') {\n      return createElement(\"img\", {\n        src: this.props.src,\n        alt: this.props.alt,\n        width: this.props.width,\n        height: this.props.height,\n        \"uk-cover\": true\n      });\n    } else if (this.props.type === 'video') {\n      return createElement(\"video\", {\n        autoPlay: this.props.autoPlay,\n        loop: this.props.loop,\n        muted: this.props.muted,\n        playsinline: this.props.playsinline,\n        width: this.props.width,\n        height: this.props.height,\n        \"uk-cover\": true\n      }, createElement(\"source\", {\n        src: this.props.src,\n        type: this.props.type + \"/\" + this.props.videoFormat\n      }));\n    } else {\n      console.error('Type property on cover component must be either video or image');\n    }\n  };\n\n  return Cover;\n}(Component);\n\nvar Dark =\n/** @class */\nfunction (_super) {\n  __extends(Dark, _super);\n\n  function Dark() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Dark.prototype.render = function () {\n    return createElement(\"div\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: \"uk-dark \" + setClassNames(this.props)\n    }, this.props.children);\n  };\n\n  return Dark;\n}(Component);\n\nvar Dropdown =\n/** @class */\nfunction (_super) {\n  __extends(Dropdown, _super);\n\n  function Dropdown() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Dropdown.prototype.render = function () {\n    return createElement(\"div\", {\n      id: this.props.id ? this.props.id : null,\n      className: \"\" + setClassNames(this.props),\n      \"uk-dropdown\": this.props.options ? this.props.options : \"\"\n    }, createElement(\"ul\", {\n      style: this.props.style ? this.props.style : null,\n      className: \"uk-nav uk-dropdown-nav\"\n    }, this.props.children));\n  };\n\n  return Dropdown;\n}(Component);\n\nvar classNames$7 = _classNames;\n\nvar Flex =\n/** @class */\nfunction (_super) {\n  __extends(Flex, _super);\n\n  function Flex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Flex.prototype.render = function () {\n    return createElement(\"div\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: \"uk-flex \" + this.setClassNames()\n    }, this.props.children);\n  };\n\n  Flex.prototype.setClassNames = function () {\n    var _a;\n\n    var alignments = this.props.alignment ? this.props.alignment.split(' ') : [];\n    return classNames$7((_a = {}, _a[\"uk-flex-\" + alignments[0]] = !!alignments[0], _a[\"uk-flex-\" + alignments[1]] = !!alignments[1], _a[\"uk-flex-\" + this.props.direction] = !!this.props.direction, _a[\"uk-flex-\" + this.props.wrap] = !!this.props.wrap, _a[\"\" + setClassNames(this.props)] = true, _a));\n  };\n\n  return Flex;\n}(Component);\n\nvar classNames$8 = _classNames;\n\nvar Checkbox =\n/** @class */\nfunction (_super) {\n  __extends(Checkbox, _super);\n\n  function Checkbox() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Checkbox.prototype.render = function () {\n    return createElement(\"input\", {\n      id: this.props.id,\n      placeholder: this.props.placeholder ? this.props.placeholder : null,\n      style: this.props.style ? this.props.style : null,\n      className: this.setClassNames(),\n      type: \"checkbox\",\n      name: this.props.name ? this.props.name : null,\n      value: this.props.value,\n      onChange: this.props.onChange,\n      onBlur: this.props.onBlur,\n      onFocus: this.props.onFocus\n    });\n  };\n\n  Checkbox.prototype.setClassNames = function () {\n    var _a;\n\n    return classNames$8((_a = {}, _a[\"uk-checkbox\"] = true, _a[\"uk-form-\" + this.props.color] = !!this.props.color, _a[\"uk-form-\" + this.props.width] = !!this.props.width, _a[\"uk-form-\" + this.props.layout] = !!this.props.layout, _a[\"\" + setClassNames(this.props)] = true, _a));\n  };\n\n  return Checkbox;\n}(Component);\n\nvar classNames$9 = _classNames;\n\nvar Fieldset =\n/** @class */\nfunction (_super) {\n  __extends(Fieldset, _super);\n\n  function Fieldset() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Fieldset.prototype.render = function () {\n    return createElement(\"fieldset\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: this.setClassNames()\n    }, this.props.children);\n  };\n\n  Fieldset.prototype.setClassNames = function () {\n    var _a;\n\n    return classNames$9((_a = {}, _a[\"uk-fieldset\"] = true, _a[\"\" + setClassNames(this.props)] = true, _a));\n  };\n\n  return Fieldset;\n}(Component);\n\nvar classNames$a = _classNames;\n\nvar Form =\n/** @class */\nfunction (_super) {\n  __extends(Form, _super);\n\n  function Form() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Form.prototype.render = function () {\n    return createElement(\"div\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: this.setClassNames(),\n      \"uk-form-custom\": this.props.custom ? \"\" : null\n    }, this.props.children);\n  };\n\n  Form.prototype.setClassNames = function () {\n    var _a;\n\n    return classNames$a((_a = {}, _a[\"uk-form-\" + this.props.layout] = !!this.props.layout, _a[\"\" + setClassNames(this.props)] = true, _a));\n  };\n\n  return Form;\n}(Component);\n\nvar classNames$b = _classNames;\n\nvar Input =\n/** @class */\nfunction (_super) {\n  __extends(Input, _super);\n\n  function Input() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Input.prototype.render = function () {\n    return createElement(\"input\", {\n      id: this.props.id,\n      placeholder: this.props.placeholder ? this.props.placeholder : null,\n      style: this.props.style ? this.props.style : null,\n      className: this.setClassNames(),\n      type: \"text\",\n      name: this.props.name ? this.props.name : null,\n      value: this.props.value,\n      onChange: this.props.onChange,\n      onBlur: this.props.onBlur,\n      onFocus: this.props.onFocus\n    });\n  };\n\n  Input.prototype.setClassNames = function () {\n    var _a;\n\n    return classNames$b((_a = {}, _a[\"uk-input\"] = true, _a[\"uk-form-\" + this.props.color] = !!this.props.color, _a[\"uk-form-\" + this.props.width] = !!this.props.width, _a[\"uk-form-\" + this.props.layout] = !!this.props.layout, _a[\"\" + setClassNames(this.props)] = true, _a));\n  };\n\n  return Input;\n}(Component);\n\nvar InputContainer =\n/** @class */\nfunction (_super) {\n  __extends(InputContainer, _super);\n\n  function InputContainer() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  InputContainer.prototype.render = function () {\n    return createElement(\"div\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: \"uk-form-controls \" + setClassNames(this.props)\n    }, this.props.children);\n  };\n\n  return InputContainer;\n}(Component);\n\nvar FormLabel =\n/** @class */\nfunction (_super) {\n  __extends(FormLabel, _super);\n\n  function FormLabel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  FormLabel.prototype.render = function () {\n    return createElement(\"label\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: \"\" + setClassNames(this.props),\n      htmlFor: this.props.htmlFor\n    }, this.props.children);\n  };\n\n  return FormLabel;\n}(Component);\n\nvar classNames$e = _classNames;\n\nvar Legend =\n/** @class */\nfunction (_super) {\n  __extends(Legend, _super);\n\n  function Legend() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Legend.prototype.render = function () {\n    return createElement(\"legend\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: this.setClassNames()\n    }, this.props.children);\n  };\n\n  Legend.prototype.setClassNames = function () {\n    var _a;\n\n    return classNames$e((_a = {}, _a[\"uk-legend\"] = true, _a[\"\" + setClassNames(this.props)] = true, _a));\n  };\n\n  return Legend;\n}(Component);\n\nvar classNames$f = _classNames;\n\nvar Radio =\n/** @class */\nfunction (_super) {\n  __extends(Radio, _super);\n\n  function Radio() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Radio.prototype.render = function () {\n    return createElement(\"input\", {\n      id: this.props.id,\n      placeholder: this.props.placeholder ? this.props.placeholder : null,\n      style: this.props.style ? this.props.style : null,\n      className: this.setClassNames(),\n      type: \"radio\",\n      name: this.props.name ? this.props.name : null,\n      value: this.props.value,\n      onChange: this.props.onChange,\n      onBlur: this.props.onBlur,\n      onFocus: this.props.onFocus\n    });\n  };\n\n  Radio.prototype.setClassNames = function () {\n    var _a;\n\n    return classNames$f((_a = {}, _a[\"uk-radio\"] = true, _a[\"uk-form-\" + this.props.color] = !!this.props.color, _a[\"uk-form-\" + this.props.width] = !!this.props.width, _a[\"uk-form-\" + this.props.layout] = !!this.props.layout, _a[\"\" + setClassNames(this.props)] = true, _a));\n  };\n\n  return Radio;\n}(Component);\n\nvar classNames$g = _classNames;\n\nvar Range =\n/** @class */\nfunction (_super) {\n  __extends(Range, _super);\n\n  function Range() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Range.prototype.render = function () {\n    return createElement(\"input\", {\n      id: this.props.id,\n      placeholder: this.props.placeholder ? this.props.placeholder : null,\n      style: this.props.style ? this.props.style : null,\n      className: this.setClassNames(),\n      type: \"range\",\n      name: this.props.name ? this.props.name : null,\n      value: this.props.value,\n      min: this.props.min,\n      max: this.props.max,\n      step: this.props.step,\n      onChange: this.props.onChange,\n      onBlur: this.props.onBlur,\n      onFocus: this.props.onFocus\n    });\n  };\n\n  Range.prototype.setClassNames = function () {\n    var _a;\n\n    return classNames$g((_a = {}, _a[\"uk-range\"] = true, _a[\"uk-form-\" + this.props.color] = !!this.props.color, _a[\"uk-form-\" + this.props.width] = !!this.props.width, _a[\"uk-form-\" + this.props.layout] = !!this.props.layout, _a[\"\" + setClassNames(this.props)] = true, _a));\n  };\n\n  return Range;\n}(Component);\n\nvar classNames$h = _classNames;\n\nvar Select =\n/** @class */\nfunction (_super) {\n  __extends(Select, _super);\n\n  function Select() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Select.prototype.render = function () {\n    return createElement(\"select\", {\n      id: this.props.id,\n      placeholder: this.props.placeholder ? this.props.placeholder : null,\n      style: this.props.style ? this.props.style : null,\n      className: this.setClassNames(),\n      value: this.props.value,\n      onChange: this.props.onChange\n    }, this.props.children);\n  };\n\n  Select.prototype.setClassNames = function () {\n    var _a;\n\n    return classNames$h((_a = {}, _a[\"uk-select\"] = true, _a[\"uk-form-\" + this.props.color] = !!this.props.color, _a[\"uk-form-\" + this.props.width] = !!this.props.width, _a[\"uk-form-\" + this.props.layout] = !!this.props.layout, _a[\"\" + setClassNames(this.props)] = true, _a));\n  };\n\n  return Select;\n}(Component);\n\nvar SelectOption =\n/** @class */\nfunction (_super) {\n  __extends(SelectOption, _super);\n\n  function SelectOption() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SelectOption.prototype.render = function () {\n    return createElement(\"option\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: \"\" + setClassNames(this.props),\n      value: this.props.value\n    }, this.props.children);\n  };\n\n  return SelectOption;\n}(Component);\n\nvar classNames$j = _classNames;\n\nvar Textarea =\n/** @class */\nfunction (_super) {\n  __extends(Textarea, _super);\n\n  function Textarea() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Textarea.prototype.render = function () {\n    return createElement(\"textarea\", {\n      id: this.props.id ? this.props.id : null,\n      placeholder: this.props.placeholder ? this.props.placeholder : null,\n      style: this.props.style ? this.props.style : null,\n      className: this.setClassNames(),\n      name: this.props.name ? this.props.name : null,\n      onChange: this.props.onChange,\n      onBlur: this.props.onBlur,\n      onFocus: this.props.onFocus\n    }, this.props.children);\n  };\n\n  Textarea.prototype.setClassNames = function () {\n    var _a;\n\n    return classNames$j((_a = {}, _a[\"uk-textarea\"] = true, _a[\"uk-form-\" + this.props.color] = !!this.props.color, _a[\"uk-form-\" + this.props.width] = !!this.props.width, _a[\"uk-form-\" + this.props.layout] = !!this.props.layout, _a[\"\" + setClassNames(this.props)] = true, _a));\n  };\n\n  return Textarea;\n}(Component);\n\nvar classNames$k = _classNames;\n\nvar Grid =\n/** @class */\nfunction (_super) {\n  __extends(Grid, _super);\n\n  function Grid() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Grid.prototype.render = function () {\n    return createElement(\"div\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: \"\" + this.setClassNames(),\n      \"uk-grid\": this.props.options ? this.props.options : \"\"\n    }, this.props.children);\n  };\n\n  Grid.prototype.setClassNames = function () {\n    var _a;\n\n    return classNames$k((_a = {}, _a[\"uk-grid-\" + this.props.gutter] = !!this.props.gutter, _a[\"uk-grid-divider\"] = this.props.divider, _a[\"uk-grid-match\"] = this.props.match, _a[\"\" + setClassNames(this.props)] = true, _a));\n  };\n\n  return Grid;\n}(Component);\n\nvar Image =\n/** @class */\nfunction (_super) {\n  __extends(Image, _super);\n\n  function Image() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Image.prototype.render = function () {\n    return createElement(\"img\", {\n      id: this.props.id ? this.props.id : null,\n      className: this.props.className,\n      width: this.props.width,\n      height: this.props.height,\n      style: this.props.style ? this.props.style : null,\n      \"data-src\": this.props.src,\n      \"uk-img\": this.props.options ? this.props.options : \"\"\n    });\n  };\n\n  return Image;\n}(Component);\n\nvar classNames$m = _classNames;\n\nvar Label =\n/** @class */\nfunction (_super) {\n  __extends(Label, _super);\n\n  function Label() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Label.prototype.render = function () {\n    return createElement(\"div\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: \"\" + setClassNames(this.props)\n    }, this.props.content);\n  };\n\n  Label.prototype.setClassNames = function () {\n    var _a;\n\n    return classNames$m('uk-label', (_a = {}, _a[\"uk-label-\" + this.props.color] = !!this.props.color, _a));\n  };\n\n  return Label;\n}(Component);\n\nvar Light =\n/** @class */\nfunction (_super) {\n  __extends(Light, _super);\n\n  function Light() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Light.prototype.render = function () {\n    return createElement(\"div\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: \"uk-light \" + setClassNames(this.props)\n    }, this.props.children);\n  };\n\n  return Light;\n}(Component);\n\nvar Lightbox =\n/** @class */\nfunction (_super) {\n  __extends(Lightbox, _super);\n\n  function Lightbox() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Lightbox.prototype.render = function () {\n    return createElement(\"div\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: setClassNames(this.props),\n      \"uk-lightbox\": this.props.options ? this.props.options : \"\"\n    }, this.props.children);\n  };\n\n  return Lightbox;\n}(Component);\n\nvar LightboxItem =\n/** @class */\nfunction (_super) {\n  __extends(LightboxItem, _super);\n\n  function LightboxItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  LightboxItem.prototype.render = function () {\n    return createElement(\"a\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: setClassNames(this.props),\n      href: this.props.href,\n      \"data-caption\": this.props.caption\n    }, this.props.children);\n  };\n\n  return LightboxItem;\n}(Component);\n\nvar classNames$n = _classNames;\n\nvar Link =\n/** @class */\nfunction (_super) {\n  __extends(Link, _super);\n\n  function Link() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Link.prototype.render = function () {\n    return createElement(\"a\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      \"uk-toggle\": this.props.toggleOptions ? this.props.toggleOptions : null,\n      href: this.props.href,\n      className: \"\" + this.setClassNames()\n    }, this.props.children);\n  };\n\n  Link.prototype.setClassNames = function () {\n    var _a;\n\n    return classNames$n((_a = {}, _a[\"uk-link-\" + this.props.type] = !!this.props.type, _a[\"\" + setClassNames(this.props)] = true, _a));\n  };\n\n  return Link;\n}(Component);\n\nvar classNames$o = _classNames;\n\nvar List =\n/** @class */\nfunction (_super) {\n  __extends(List, _super);\n\n  function List() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  List.prototype.render = function () {\n    return createElement(\"ul\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: \"\" + this.setClassNames()\n    }, this.props.children);\n  };\n\n  List.prototype.setClassNames = function () {\n    var _a;\n\n    return classNames$o('uk-list', (_a = {}, _a[\"uk-link-\" + this.props.type] = !!this.props.type, _a[\"\" + setClassNames(this.props)] = true, _a));\n  };\n\n  return List;\n}(Component);\n\nvar ListItem =\n/** @class */\nfunction (_super) {\n  __extends(ListItem, _super);\n\n  function ListItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ListItem.prototype.render = function () {\n    return createElement(\"li\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: setClassNames(this.props)\n    }, this.props.children);\n  };\n\n  return ListItem;\n}(Component);\n\nvar classNames$p = _classNames;\n\nvar Margin =\n/** @class */\nfunction (_super) {\n  __extends(Margin, _super);\n\n  function Margin() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Margin.prototype.render = function () {\n    return createElement(\"div\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      \"uk-margin\": this.props.dynamicWrapping,\n      className: this.setClassNames()\n    }, this.props.children);\n  };\n\n  Margin.prototype.setClassNames = function () {\n    var _a;\n\n    var stringArray = this.props.type.split('; ');\n    var classString;\n    stringArray.map(function (string, idx) {\n      classString = classString + \" uk-margin-\" + string;\n    });\n    return classNames$p(classString, (_a = {}, _a[\"\" + setClassNames(this.props)] = true, _a));\n  };\n\n  return Margin;\n}(Component);\n\nvar classNames$q = _classNames;\n\nvar Nav =\n/** @class */\nfunction (_super) {\n  __extends(Nav, _super);\n\n  function Nav() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Nav.prototype.render = function () {\n    return createElement(\"ul\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: \"\" + this.setClassNames(),\n      \"uk-nav\": this.props.options ? this.props.options : \"\"\n    }, this.props.children);\n  };\n\n  Nav.prototype.setClassNames = function () {\n    var _a;\n\n    return classNames$q((_a = {}, _a[\"uk-nav\"] = true, _a[\"uk-nav-\" + this.props.preset] = !!this.props.preset, _a[\"uk-nav-sub\"] = this.props.child, _a[\"uk-nav-parent-icon\"] = this.props.accordion, _a[\"\" + setClassNames(this.props)] = true, _a));\n  };\n\n  return Nav;\n}(Component);\n\nvar classNames$r = _classNames;\n\nvar NavItem =\n/** @class */\nfunction (_super) {\n  __extends(NavItem, _super);\n\n  function NavItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  NavItem.prototype.render = function () {\n    return createElement(\"li\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: \"\" + this.setClassNames()\n    }, this.props.children);\n  };\n\n  NavItem.prototype.setClassNames = function () {\n    var _a;\n\n    return classNames$r((_a = {}, _a[\"uk-nav-\" + this.props.type] = !!this.props.type, _a[\"uk-parent\"] = this.props.parent, _a[\"\" + setClassNames(this.props)] = true, _a));\n  };\n\n  return NavItem;\n}(Component);\n\nvar classNames$s = _classNames;\n\nvar Navbar =\n/** @class */\nfunction (_super) {\n  __extends(Navbar, _super);\n\n  function Navbar() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Navbar.prototype.render = function () {\n    return createElement(\"div\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: \"\" + this.setClassNames()\n    }, createElement(\"ul\", {\n      className: \"uk-navbar-nav\"\n    }, this.props.children));\n  };\n\n  Navbar.prototype.setClassNames = function () {\n    var _a;\n\n    return classNames$s((_a = {}, _a[\"uk-navbar-left\"] = this.props.left, _a[\"uk-navbar-right\"] = this.props.right, _a[setClassNames(this.props)] = true, _a));\n  };\n\n  return Navbar;\n}(Component);\n\nvar classNames$t = _classNames;\n\nvar NavbarContainer =\n/** @class */\nfunction (_super) {\n  __extends(NavbarContainer, _super);\n\n  function NavbarContainer() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  NavbarContainer.prototype.render = function () {\n    return createElement(\"div\", null, createElement(\"nav\", {\n      id: this.props.id ? this.props.id : null,\n      className: \"\" + this.setClassNames(),\n      style: this.props.style ? this.props.style : null,\n      \"uk-navbar\": this.props.options ? this.props.options : \"\"\n    }, this.props.children), this.props.dropbar ? createElement(\"div\", {\n      className: \"uk-navbar-dropbar\"\n    }) : null);\n  };\n\n  NavbarContainer.prototype.setClassNames = function () {\n    var _a;\n\n    return classNames$t('uk-navbar-container', (_a = {}, _a[\"uk-navbar-transparent\"] = this.props.transparent, _a[setClassNames(this.props)] = true, _a));\n  };\n\n  return NavbarContainer;\n}(Component);\n\nvar NavbarDropdown =\n/** @class */\nfunction (_super) {\n  __extends(NavbarDropdown, _super);\n\n  function NavbarDropdown() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  NavbarDropdown.prototype.render = function () {\n    return createElement(\"div\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: \"uk-navbar-dropdown \" + setClassNames(this.props)\n    }, createElement(\"ul\", {\n      className: \"uk-nav uk-navbar-dropdown-nav\"\n    }, this.props.children));\n  };\n\n  return NavbarDropdown;\n}(Component);\n\nvar NavbarSticky =\n/** @class */\nfunction (_super) {\n  __extends(NavbarSticky, _super);\n\n  function NavbarSticky() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  NavbarSticky.prototype.componentDidMount = function () {\n    if (this.props.onActive) {\n      this.validateIdProp();\n      UIkit.util.on(this.props.id, 'active', this.props.onActive);\n    }\n\n    if (this.props.onInactive) {\n      this.validateIdProp();\n      UIkit.util.on(this.props.id, 'active', this.props.onInactive);\n    }\n  };\n\n  NavbarSticky.prototype.render = function () {\n    return createElement(\"div\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: \"\" + setClassNames(this.props),\n      \"uk-sticky\": \"\\n                    sel-target: .uk-navbar-container;\\n                    cls-active: uk-navbar-sticky;\\n                    \" + (this.props.options ? this.props.options : '') + \"\\n            \"\n    }, this.props.children);\n  };\n\n  NavbarSticky.prototype.validateIdProp = function () {\n    if (!this.props.id) {\n      console.error(\"ID property is required to register to Navbar Sticky events\");\n    }\n  };\n\n  return NavbarSticky;\n}(Component);\n\nvar Offcanvas =\n/** @class */\nfunction (_super) {\n  __extends(Offcanvas, _super);\n\n  function Offcanvas() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Offcanvas.prototype.componentDidMount = function () {\n    if (this.props.onBeforeShow) {\n      UIkit.util.on(this.props.id, 'beforeshow', this.props.onBeforeShow);\n    }\n\n    if (this.props.onShow) {\n      UIkit.util.on(this.props.id, 'show', this.props.onShow);\n    }\n\n    if (this.props.onShown) {\n      UIkit.util.on(this.props.id, 'shown', this.props.onShown);\n    }\n\n    if (this.props.onBeforeHide) {\n      UIkit.util.on(this.props.id, 'beforehide', this.props.onBeforeHide);\n    }\n\n    if (this.props.onHide) {\n      UIkit.util.on(this.props.id, 'hide', this.props.onHide);\n    }\n\n    if (this.props.onHidden) {\n      UIkit.util.on(this.props.id, 'hidden', this.props.onHidden);\n    }\n  };\n\n  Offcanvas.prototype.render = function () {\n    return createElement(\"div\", {\n      id: this.props.id,\n      style: this.props.style ? this.props.style : null,\n      className: \"\" + setClassNames(this.props),\n      \"uk-offcanvas\": this.props.options ? this.props.options : \"\"\n    }, createElement(\"div\", {\n      className: \"uk-offcanvas-bar\"\n    }, this.props.children));\n  };\n\n  return Offcanvas;\n}(Component);\n\nvar OffcanvasContainer =\n/** @class */\nfunction (_super) {\n  __extends(OffcanvasContainer, _super);\n\n  function OffcanvasContainer() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  OffcanvasContainer.prototype.render = function () {\n    return createElement(\"div\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: \"uk-offcanvas-content \" + setClassNames(this.props)\n    }, this.props.children);\n  };\n\n  return OffcanvasContainer;\n}(Component);\n\nvar classNames$u = _classNames;\n\nvar Overlay =\n/** @class */\nfunction (_super) {\n  __extends(Overlay, _super);\n\n  function Overlay() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Overlay.prototype.render = function () {\n    return createElement(\"div\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: \"\" + this.setClassNames()\n    }, this.props.showIcon ? createElement(\"span\", {\n      \"uk-overlay-icon\": true\n    }) : null);\n  };\n\n  Overlay.prototype.setClassNames = function () {\n    var _a;\n\n    return classNames$u('uk-overlay', (_a = {}, _a[\"uk-position-\" + this.props.position] = !!this.props.position, _a[\"uk-position-\" + this.props.type] = !!this.props.type, _a[\"\" + setClassNames(this.props)] = true, _a));\n  };\n\n  return Overlay;\n}(Component);\n\nvar classNames$v = _classNames;\n\nvar Panel =\n/** @class */\nfunction (_super) {\n  __extends(Panel, _super);\n\n  function Panel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Panel.prototype.render = function () {\n    return createElement(\"div\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: this.setClassNames()\n    }, this.props.children);\n  };\n\n  Panel.prototype.setClassNames = function () {\n    var _a;\n\n    return classNames$v('uk-panel', (_a = {}, _a[\"uk-panel-scrollable\"] = this.props.isScrollable, _a[setClassNames(this.props)] = true, _a));\n  };\n\n  return Panel;\n}(Component);\n\nvar Parallax =\n/** @class */\nfunction (_super) {\n  __extends(Parallax, _super);\n\n  function Parallax() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Parallax.prototype.render = function () {\n    return createElement(\"div\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: \"\" + setClassNames(this.props)\n    }, this.applyParallaxFiltersToChild());\n  };\n\n  Parallax.prototype.applyParallaxFiltersToChild = function () {\n    var _this = this;\n\n    return Children.map(this.props.children, function (child, idx) {\n      if (idx > 0) return child;\n      return cloneElement(child, {\n        'uk-parallax': _this.props.options\n      });\n    });\n  };\n\n  return Parallax;\n}(Component);\n\nvar classNames$w = _classNames;\n\nvar Progress =\n/** @class */\nfunction (_super) {\n  __extends(Progress, _super);\n\n  function Progress(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.state = {\n      value: props.value\n    };\n    return _this;\n  }\n\n  Progress.getDerivedStateFromProps = function (props, currentState) {\n    if (currentState !== props.value) {\n      return {\n        value: props.value\n      };\n    }\n  };\n\n  Progress.prototype.render = function () {\n    return createElement(\"progress\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: \"\" + this.setClassNames(),\n      value: this.state.value,\n      max: this.props.max\n    });\n  };\n\n  Progress.prototype.setClassNames = function () {\n    var _a;\n\n    return classNames$w('uk-progress', (_a = {}, _a[\"\" + setClassNames(this.props)] = true, _a));\n  };\n\n  return Progress;\n}(Component);\n\nvar Scrollspy =\n/** @class */\nfunction (_super) {\n  __extends(Scrollspy, _super);\n\n  function Scrollspy() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Scrollspy.prototype.render = function () {\n    return createElement(\"div\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: \"\" + setClassNames(this.props),\n      \"uk-scrollspy\": this.props.options ? this.props.options : \"\"\n    }, this.props.children);\n  };\n\n  return Scrollspy;\n}(Component);\n\nvar classNames$x = _classNames;\n\nvar Section =\n/** @class */\nfunction (_super) {\n  __extends(Section, _super);\n\n  function Section() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Section.prototype.render = function () {\n    return createElement(\"div\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: \"\" + this.setClassNames()\n    }, this.props.children);\n  };\n\n  Section.prototype.setClassNames = function () {\n    var _a;\n\n    return classNames$x((_a = {}, _a[\"uk-section\"] = this.props.padding, _a[\"uk-section-\" + this.props.color] = !!this.props.color, _a[\"uk-section-\" + this.props.size] = !!this.props.size, _a[\"uk-preserve-color\"] = this.props.preserveColor, _a[setClassNames(this.props)] = true, _a[\"uk-position-\" + this.props.position] = !!this.props.position, _a));\n  };\n\n  return Section;\n}(Component);\n\nvar classNames$y = _classNames;\n\nvar Sidebar =\n/** @class */\nfunction (_super) {\n  __extends(Sidebar, _super);\n\n  function Sidebar() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Sidebar.prototype.render = function () {\n    return createElement(\"div\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: this.setClassNames()\n    }, this.props.children);\n  };\n\n  Sidebar.prototype.setClassNames = function () {\n    var _a;\n\n    return classNames$y((_a = {}, _a[\"uk-overflow-auto\"] = true, _a[\"uk-\" + this.props.visibility] = !!this.props.visibility, _a[setClassNames(this.props)] = true, _a));\n  };\n\n  return Sidebar;\n}(Component);\n\nvar Slideshow =\n/** @class */\nfunction (_super) {\n  __extends(Slideshow, _super);\n\n  function Slideshow() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Slideshow.prototype.render = function () {\n    return createElement(\"div\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: \"\" + setClassNames(this.props),\n      \"uk-slideshow\": this.props.options ? this.props.options : \"\"\n    }, this.setNavigation());\n  };\n\n  Slideshow.prototype.setNavigation = function () {\n    if (this.props.navigation) {\n      return createElement(\"div\", {\n        className: \"uk-position-relative uk-visible-toggle \" + this.setNavigationStyle()\n      }, createElement(\"ul\", {\n        className: \"uk-slideshow-items\"\n      }, this.props.children), createElement(\"a\", {\n        className: \"uk-position-center-left uk-position-small uk-hidden-hover\",\n        href: \"#\",\n        \"uk-slidenav-previous\": \"\",\n        \"uk-slideshow-item\": \"previous\"\n      }), createElement(\"a\", {\n        className: \"uk-position-center-right uk-position-small uk-hidden-hover\",\n        href: \"#\",\n        \"uk-slidenav-next\": \"\",\n        \"uk-slideshow-item\": \"next\"\n      }));\n    } else {\n      return createElement(\"ul\", {\n        className: \"uk-slideshow-items\"\n      }, this.props.children);\n    }\n  };\n\n  Slideshow.prototype.setNavigationStyle = function () {\n    if (this.props.navigation && this.props.navigationStyle) {\n      return \"uk-\" + this.props.navigationStyle;\n    } else {\n      return \"uk-dark\";\n    }\n  };\n\n  return Slideshow;\n}(Component);\n\nvar SlideshowItem =\n/** @class */\nfunction (_super) {\n  __extends(SlideshowItem, _super);\n\n  function SlideshowItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SlideshowItem.prototype.render = function () {\n    return createElement(\"li\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: \"\" + setClassNames(this.props)\n    }, this.renderBasedOnType());\n  };\n\n  SlideshowItem.prototype.renderBasedOnType = function () {\n    if (this.props.type === 'image') {\n      return createElement(\"img\", {\n        src: this.props.src,\n        alt: this.props.alt,\n        \"uk-cover\": \"\"\n      });\n    } else if (this.props.type === 'video') {\n      return createElement(\"video\", {\n        autoPlay: this.props.autoPlay,\n        loop: this.props.loop,\n        muted: this.props.muted,\n        playsinline: this.props.playsinline,\n        \"uk-cover\": \"\"\n      }, createElement(\"source\", {\n        src: this.props.src,\n        type: this.props.type + \"/\" + this.props.videoFormat\n      }));\n    } else {\n      console.error('Type property on cover component must be either video or image');\n    }\n  };\n\n  return SlideshowItem;\n}(Component);\n\nvar Tab =\n/** @class */\nfunction (_super) {\n  __extends(Tab, _super);\n\n  function Tab() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Tab.prototype.render = function () {\n    return createElement(\"li\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: setClassNames(this.props)\n    }, createElement(\"a\", {\n      href: \"#\"\n    }, this.props.children));\n  };\n\n  return Tab;\n}(Component);\n\nvar TabContainer =\n/** @class */\nfunction (_super) {\n  __extends(TabContainer, _super);\n\n  function TabContainer() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TabContainer.prototype.componentDidMount = function () {\n    var _this = this;\n\n    console.log(this.props.children);\n\n    if (this.props.onBeforeShow) {\n      this.validateIdProp();\n      UIkit.util.on(this.props.id, 'beforeshow', function () {\n        console.log(\"eventFired\");\n\n        _this.props.onBeforeShow();\n      });\n    }\n\n    if (this.props.onShow) {\n      this.validateIdProp();\n      UIkit.util.on(this.props.id, 'show', this.props.onShow);\n    }\n\n    if (this.props.onShown) {\n      this.validateIdProp();\n      UIkit.util.on(this.props.id, 'shown', this.props.onShown);\n    }\n\n    if (this.props.onBeforeHide) {\n      this.validateIdProp();\n      UIkit.util.on(this.props.id, 'beforehide', this.props.onBeforeHide);\n    }\n\n    if (this.props.onHide) {\n      this.validateIdProp();\n      UIkit.util.on(this.props.id, 'hide', this.props.onHide);\n    }\n\n    if (this.props.onHidden) {\n      this.validateIdProp();\n      UIkit.util.on(this.props.id, 'hidden', this.props.onHidden);\n    }\n  };\n\n  TabContainer.prototype.render = function () {\n    return createElement(\"div\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: setClassNames(this.props)\n    }, createElement(\"ul\", {\n      \"uk-tab\": this.props.options ? this.props.options : \"\"\n    }, this.renderChildren('tab')), createElement(\"ul\", {\n      id: this.props.id ? this.props.id : \"\",\n      className: \"uk-switcher\"\n    }, this.renderChildren('tab-content')));\n  };\n\n  TabContainer.prototype.renderChildren = function (key) {\n    return Children.map(this.props.children, function (child, idx) {\n      var comp = child;\n\n      if (comp.key === key) {\n        return comp;\n      }\n    });\n  };\n\n  TabContainer.prototype.validateIdProp = function () {\n    if (!this.props.id) {\n      console.error(\"ID property is required to register to tab events\");\n    }\n  };\n\n  return TabContainer;\n}(Component);\n\nvar TabContent =\n/** @class */\nfunction (_super) {\n  __extends(TabContent, _super);\n\n  function TabContent() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TabContent.prototype.render = function () {\n    return createElement(\"li\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: \"\" + setClassNames(this.props)\n    }, this.props.children);\n  };\n\n  return TabContent;\n}(Component);\n\nvar classNames$A = _classNames;\n\nvar Table =\n/** @class */\nfunction (_super) {\n  __extends(Table, _super);\n\n  function Table() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Table.prototype.render = function () {\n    return createElement(\"table\", {\n      id: this.props.id ? this.props.id : null,\n      style: this.props.style ? this.props.style : null,\n      className: \"\" + this.setClassNames()\n    }, this.props.children);\n  };\n\n  Table.prototype.setClassNames = function () {\n    var _a;\n\n    return classNames$A('uk-table', (_a = {}, _a[\"uk-table-divider\"] = this.props.divider, _a[\"uk-table-striped\"] = this.props.striped, _a[\"uk-table-hover\"] = this.props.hover, _a[\"uk-table-justify\"] = this.props.justify, _a[\"uk-table-middle\"] = this.props.center, _a[\"uk-overflow-auto\"] = this.props.responsive, _a[\"uk-table-\" + this.props.size] = !!this.props.size, _a[\"\" + setClassNames(this.props)] = true, _a));\n  };\n\n  return Table;\n}(Component);\n\nexport { Accordion, AccordionItem, Alert, Article, Badge, Breadcrumb, Button, Card, CardBody, CardFooter, CardHeader, CardTitle, Container, Cover, Dark, Dropdown, Flex, Checkbox, Fieldset, Form, Input, InputContainer, FormLabel, Legend, Radio, Range, Select, SelectOption, Textarea, Grid, Icon, Image, Label, Light, Lightbox, LightboxItem, Link, List, ListItem, Margin, Nav, NavItem, Navbar, NavbarContainer, NavbarDropdown, NavbarSticky, Offcanvas, OffcanvasContainer, Overlay, Panel, Parallax, Progress, Scrollspy, Section, Sidebar, Slideshow, SlideshowItem, Tab, TabContainer, TabContent, Table };","map":null,"metadata":{},"sourceType":"module"}